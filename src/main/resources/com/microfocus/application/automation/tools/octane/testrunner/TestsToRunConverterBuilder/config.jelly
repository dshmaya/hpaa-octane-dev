<!--
  ~
  ~  Certain versions of software and/or documents (“Material”) accessible here may contain branding from
  ~  Hewlett-Packard Company (now HP Inc.) and Hewlett Packard Enterprise Company.  As of September 1, 2017,
  ~  the Material is now offered by Micro Focus, a separately owned and operated company.  Any reference to the HP
  ~  and Hewlett Packard Enterprise/HPE marks is historical in nature, and the HP and Hewlett Packard Enterprise/HPE
  ~  marks are the property of their respective owners.
  ~ __________________________________________________________________
  ~ MIT License
  ~
  ~ © Copyright 2012-2019 Micro Focus or one of its affiliates..
  ~
  ~ The only warranties for products and services of Micro Focus and its affiliates
  ~ and licensors (“Micro Focus”) are set forth in the express warranty statements
  ~ accompanying such products and services. Nothing herein should be construed as
  ~ constituting an additional warranty. Micro Focus shall not be liable for technical
  ~ or editorial errors or omissions contained herein.
  ~ The information contained herein is subject to change without notice.
  ~ ___________________________________________________________________
  ~
  -->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form">
    <f:entry title="Testing framework" field="framework">
        <select name="teststorunconverter.framework" onchange="selectionChanged(this)">
             <j:forEach var="myFramework" items="${descriptor.Frameworks}">
                  <f:option selected="${myFramework.name == instance.testsToRunConverterModel.framework.name}" value="${myFramework.name}">
                        ${myFramework.description}
                  </f:option>
             </j:forEach>
        </select>
    </f:entry>

    <j:forEach var="myFramework" items="${descriptor.Frameworks}">
        <f:textbox id="format+${myFramework.name}" value="${myFramework.format}" hidden="hidden"/>
        <f:textbox id="delimiter+${myFramework.name}" value="${myFramework.delimiter}" hidden="hidden"/>
    </j:forEach>


    <j:if test="${instance.testsToRunConverterModel.framework.name == 'custom'}">
        <f:entry title="Format" field="format" >
            <textarea id="format" name="teststorunconverter.format" type="text" class="setting-input" style="resize: vertical; min-height:30px;">
                ${instance.testsToRunConverterModel.framework.format}
            </textarea>
        </f:entry>

        <f:entry title="Delimiter" field="delimiter" >
            <f:textbox id="delimiter" name="teststorunconverter.delimiter" value="${instance.testsToRunConverterModel.framework.delimiter}" />
        </f:entry>
    </j:if>
    <j:if test="${instance.testsToRunConverterModel.framework.name != 'custom'}">
        <f:entry title="Format" field="format">
            <textarea id="format" name="teststorunconverter.format" type="text" class="setting-input" disabled="true" style="resize: vertical; min-height:30px;">
                ${instance.testsToRunConverterModel.framework.format}
            </textarea>
        </f:entry>

        <f:entry title="Delimiter" field="delimiter" >
            <f:textbox id="delimiter" name="teststorunconverter.delimiter" value="${instance.testsToRunConverterModel.framework.delimiter}" disabled="true"/>
        </f:entry>
    </j:if>
    <f:advanced>
    <f:section title="Test conversion"/>
    <f:entry title="Tests to run" description="Tests to run in raw format, for example : v1:package1|className1|testName1;package2|className2|testName2">
      <f:textbox field="testsToRun" />
    </f:entry>
            <f:validateButton title="Convert" progress="Evaluating..."
                    method="testConvert" with="framework,teststorunconverter.framework,teststorunconverter.format,teststorunconverter.delimiter,testsToRun"/>
    </f:advanced>

    <script>


        function selectionChanged(sender) {

            var x = sender.selectedIndex;
            var y = sender.options;
            var txtFormat = document.getElementById('format');
            var txtDelimiter = document.getElementById('delimiter');

            var bCustom = y[x].value === 'custom' ? true : false;

            txtFormat.disabled = !bCustom;
            txtDelimiter.disabled = !bCustom;

            var optionFormat = document.getElementById('format+' + y[x].value);
            var optionDelimiter = document.getElementById('delimiter+' + y[x].value);

            txtFormat.value = optionFormat ? optionFormat.value : "";
            txtDelimiter.value = optionDelimiter ? optionDelimiter.value : "";
        }

    </script>

</j:jelly>